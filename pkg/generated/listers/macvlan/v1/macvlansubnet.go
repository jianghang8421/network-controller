/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/cnrancher/network-controller/types/apis/macvlan/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MacvlanSubnetLister helps list MacvlanSubnets.
type MacvlanSubnetLister interface {
	// List lists all MacvlanSubnets in the indexer.
	List(selector labels.Selector) (ret []*v1.MacvlanSubnet, err error)
	// MacvlanSubnets returns an object that can list and get MacvlanSubnets.
	MacvlanSubnets(namespace string) MacvlanSubnetNamespaceLister
	MacvlanSubnetListerExpansion
}

// macvlanSubnetLister implements the MacvlanSubnetLister interface.
type macvlanSubnetLister struct {
	indexer cache.Indexer
}

// NewMacvlanSubnetLister returns a new MacvlanSubnetLister.
func NewMacvlanSubnetLister(indexer cache.Indexer) MacvlanSubnetLister {
	return &macvlanSubnetLister{indexer: indexer}
}

// List lists all MacvlanSubnets in the indexer.
func (s *macvlanSubnetLister) List(selector labels.Selector) (ret []*v1.MacvlanSubnet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MacvlanSubnet))
	})
	return ret, err
}

// MacvlanSubnets returns an object that can list and get MacvlanSubnets.
func (s *macvlanSubnetLister) MacvlanSubnets(namespace string) MacvlanSubnetNamespaceLister {
	return macvlanSubnetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MacvlanSubnetNamespaceLister helps list and get MacvlanSubnets.
type MacvlanSubnetNamespaceLister interface {
	// List lists all MacvlanSubnets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.MacvlanSubnet, err error)
	// Get retrieves the MacvlanSubnet from the indexer for a given namespace and name.
	Get(name string) (*v1.MacvlanSubnet, error)
	MacvlanSubnetNamespaceListerExpansion
}

// macvlanSubnetNamespaceLister implements the MacvlanSubnetNamespaceLister
// interface.
type macvlanSubnetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MacvlanSubnets in the indexer for a given namespace.
func (s macvlanSubnetNamespaceLister) List(selector labels.Selector) (ret []*v1.MacvlanSubnet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MacvlanSubnet))
	})
	return ret, err
}

// Get retrieves the MacvlanSubnet from the indexer for a given namespace and name.
func (s macvlanSubnetNamespaceLister) Get(name string) (*v1.MacvlanSubnet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("macvlansubnet"), name)
	}
	return obj.(*v1.MacvlanSubnet), nil
}
