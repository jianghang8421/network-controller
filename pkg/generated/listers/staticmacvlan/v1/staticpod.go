/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/cnrancher/static-pod-controller/types/apis/staticmacvlan/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StaticPodLister helps list StaticPods.
type StaticPodLister interface {
	// List lists all StaticPods in the indexer.
	List(selector labels.Selector) (ret []*v1.StaticPod, err error)
	// StaticPods returns an object that can list and get StaticPods.
	StaticPods(namespace string) StaticPodNamespaceLister
	StaticPodListerExpansion
}

// staticPodLister implements the StaticPodLister interface.
type staticPodLister struct {
	indexer cache.Indexer
}

// NewStaticPodLister returns a new StaticPodLister.
func NewStaticPodLister(indexer cache.Indexer) StaticPodLister {
	return &staticPodLister{indexer: indexer}
}

// List lists all StaticPods in the indexer.
func (s *staticPodLister) List(selector labels.Selector) (ret []*v1.StaticPod, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.StaticPod))
	})
	return ret, err
}

// StaticPods returns an object that can list and get StaticPods.
func (s *staticPodLister) StaticPods(namespace string) StaticPodNamespaceLister {
	return staticPodNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StaticPodNamespaceLister helps list and get StaticPods.
type StaticPodNamespaceLister interface {
	// List lists all StaticPods in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.StaticPod, err error)
	// Get retrieves the StaticPod from the indexer for a given namespace and name.
	Get(name string) (*v1.StaticPod, error)
	StaticPodNamespaceListerExpansion
}

// staticPodNamespaceLister implements the StaticPodNamespaceLister
// interface.
type staticPodNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StaticPods in the indexer for a given namespace.
func (s staticPodNamespaceLister) List(selector labels.Selector) (ret []*v1.StaticPod, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.StaticPod))
	})
	return ret, err
}

// Get retrieves the StaticPod from the indexer for a given namespace and name.
func (s staticPodNamespaceLister) Get(name string) (*v1.StaticPod, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("staticpod"), name)
	}
	return obj.(*v1.StaticPod), nil
}
